{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; //////Following method uses react to create element\n//const element = React.createElement('h1',null,\"Amol, Welcome to React Programming...\");\n//ReactDOM.render(element,document.getElementById('root'));\n\nconst element = /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h1\", {\n  className: \"textRed\"\n}, \"Amol, Welcome to React Programming...\"), /*#__PURE__*/React.createElement(\"h1\", {\n  className: \"textGreen\"\n}, \"Understanding the Creation of Elements in React...\"));\nReactDOM.render(element, document.getElementById('root')); /////Following method uses jsx(javascript xml) to create element, and its converted to single js by babel; \n//means one extra step\n\n/*const welcomeElement = <h1 className='textClass'>Amol, Welcome to React Programming...</h1>;\n\nReactDOM.render(welcomeElement,document.getElementById('root'));\n\nconst newElement = <h1 className='textClass'>Understanding the Creation of Elements in React...</h1>;\n\nReactDOM.render(newElement,document.getElementById('element'));\n\nconst element=(\n  <div>\n      <h1 className='textRed'>Amol, Welcome to React Programming...</h1>\n      <h1 className='textGreen'>Understanding the Creation of Elements in React...</h1>\n  </div>\n);\n\nReactDOM.render(element,document.getElementById('root'));*/\n//function compnenet------------------\n\n/*var DisplayEmployeeInfo = (employee) => {\n  return <div>\n    <h1>Employee Details</h1>\n    <p>\n      <label>Employee Id: <b>{employee.Id}</b></label>\n    </p>\n    <p>\n      <label>Employee Name: <b>{employee.Name}</b></label>\n    </p>\n    <p>\n      <label>Employee Location: <b>{employee.Location}</b></label>\n    </p>\n    <p>\n      <label>Employee Salary: <b>{employee.Salary}</b></label>\n    </p>\n    <DepartmentInfo DeptId={employee.DeptId} DeptName={employee.DeptName}></DepartmentInfo>\n  </div>;\n}\n\nvar DepartmentInfo = (department) => {\n  return <div>\n    <p>\n      <label>Department Id: <b>{department.DeptId}</b></label>\n    </p>\n    <p>\n      <label>Department Name: <b>{department.DeptName}</b></label>\n    </p>\n  </div>;\n}\n\nconst elementEmployee = <DisplayEmployeeInfo Id=\"100\" Name=\"Amol\" Location=\"Dublin\"\n  Salary=\"45000\" DeptId=\"1\" DeptName=\"IT\">\n</DisplayEmployeeInfo>\n\nReactDOM.render(elementEmployee, document.getElementById(\"employee\"));*/\n//------------\n//class compnent--------\n\n/*class Employees extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props);\n  }\n  render() {\n    return <div>\n      <h1>Employee Class Details</h1>\n      <p>\n        <label>Employee Id: <b>{this.props.Id}</b></label>\n      </p>\n      <p>\n        <label>Employee Name: <b>{this.props.Name}</b></label>\n      </p>\n      <p>\n        <label>Employee Location: <b>{this.props.Location}</b></label>\n      </p>\n      <p>\n        <label>Employee Salary: <b>{this.props.Salary}</b></label>\n      </p>\n      <Departments dId={this.props.DeptId} dName={this.props.DeptName}></Departments>\n    </div>\n  }\n}\n\nclass Departments extends React.Component {\n  render() {\n    return <div>\n      <p><label>Department Id: <b>{this.props.dId}</b></label></p>\n      <p><label>Department Name: <b>{this.props.dName}</b></label></p>\n    </div>\n  }\n}\nconst classEmployee = <Employees Id=\"100\" Name=\"Carol\" Location=\"Cork\" Salary=\"50000\" DeptId=\"200\" DeptName=\"BA\"></Employees>\nReactDOM.render(classEmployee, document.getElementById(\"classEmployee\"));*/\n//----------------\n//state management----------\n\n/*class State extends React.Component {\n  state={counter:0};\n  addEmployee=()=>{\n    this.setState({counter:this.state.counter+1});\n    }\n  render() {\n    return <div>\n      <p><button onClick={this.addEmployee}>Add New Employee</button></p>\n      <p><label>Add Employee Button is Clicked: <b>{this.state.counter}</b></label></p>\n    </div>\n  }\n}\n\nconst stateTutorial = <State></State>\nReactDOM.render(stateTutorial, document.getElementById(\"state\"));\n\n\nclass CountChar extends React.Component {\n  state={message:''};\n  \n  onMessageChange(text){\n    this.setState({message:\"Message has \" + text.length + \" number of characters\"});\n    }\n\n  render() {\n    return <div>\n      <p><lable>Input Characters: <input type=\"text\" onChange={e=>this.onMessageChange(e.target.value)}></input></lable></p>\n      <p><lable>{this.state.message}</lable></p>\n    </div>\n  }\n}\n\nconst countChar = <CountChar></CountChar>\nReactDOM.render(countChar, document.getElementById(\"countChar\"));*/\n//--------------------","map":{"version":3,"sources":["C:/Users/a.awate/source/repos/React/demo-project/src/index.js"],"names":["React","ReactDOM","element","createElement","className","render","document","getElementById"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP,C,CAEA;AAEA;AACA;;AAEA,MAAMC,OAAO,gBAAGF,KAAK,CAACG,aAAN,CACd,KADc,EAEd,IAFc,eAGdH,KAAK,CAACG,aAAN,CAAoB,IAApB,EAA0B;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAA1B,EAAoD,uCAApD,CAHc,eAIdJ,KAAK,CAACG,aAAN,CAAoB,IAApB,EAA0B;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAA1B,EAAsD,oDAAtD,CAJc,CAAhB;AAMAH,QAAQ,CAACI,MAAT,CAAgBH,OAAhB,EAAyBI,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E,CAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n//////Following method uses react to create element\n\n//const element = React.createElement('h1',null,\"Amol, Welcome to React Programming...\");\n//ReactDOM.render(element,document.getElementById('root'));\n\nconst element = React.createElement(\n  \"div\",\n  null,\n  React.createElement(\"h1\", { className: \"textRed\" }, \"Amol, Welcome to React Programming...\"),\n  React.createElement(\"h1\", { className: \"textGreen\" }, \"Understanding the Creation of Elements in React...\"))\n\nReactDOM.render(element, document.getElementById('root'));\n\n/////Following method uses jsx(javascript xml) to create element, and its converted to single js by babel; \n//means one extra step\n\n/*const welcomeElement = <h1 className='textClass'>Amol, Welcome to React Programming...</h1>;\n\nReactDOM.render(welcomeElement,document.getElementById('root'));\n\nconst newElement = <h1 className='textClass'>Understanding the Creation of Elements in React...</h1>;\n\nReactDOM.render(newElement,document.getElementById('element'));\n\nconst element=(\n  <div>\n      <h1 className='textRed'>Amol, Welcome to React Programming...</h1>\n      <h1 className='textGreen'>Understanding the Creation of Elements in React...</h1>\n  </div>\n);\n\nReactDOM.render(element,document.getElementById('root'));*/\n\n//function compnenet------------------\n/*var DisplayEmployeeInfo = (employee) => {\n  return <div>\n    <h1>Employee Details</h1>\n    <p>\n      <label>Employee Id: <b>{employee.Id}</b></label>\n    </p>\n    <p>\n      <label>Employee Name: <b>{employee.Name}</b></label>\n    </p>\n    <p>\n      <label>Employee Location: <b>{employee.Location}</b></label>\n    </p>\n    <p>\n      <label>Employee Salary: <b>{employee.Salary}</b></label>\n    </p>\n    <DepartmentInfo DeptId={employee.DeptId} DeptName={employee.DeptName}></DepartmentInfo>\n  </div>;\n}\n\nvar DepartmentInfo = (department) => {\n  return <div>\n    <p>\n      <label>Department Id: <b>{department.DeptId}</b></label>\n    </p>\n    <p>\n      <label>Department Name: <b>{department.DeptName}</b></label>\n    </p>\n  </div>;\n}\n\nconst elementEmployee = <DisplayEmployeeInfo Id=\"100\" Name=\"Amol\" Location=\"Dublin\"\n  Salary=\"45000\" DeptId=\"1\" DeptName=\"IT\">\n</DisplayEmployeeInfo>\n\nReactDOM.render(elementEmployee, document.getElementById(\"employee\"));*/\n//------------\n\n//class compnent--------\n/*class Employees extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props);\n  }\n  render() {\n    return <div>\n      <h1>Employee Class Details</h1>\n      <p>\n        <label>Employee Id: <b>{this.props.Id}</b></label>\n      </p>\n      <p>\n        <label>Employee Name: <b>{this.props.Name}</b></label>\n      </p>\n      <p>\n        <label>Employee Location: <b>{this.props.Location}</b></label>\n      </p>\n      <p>\n        <label>Employee Salary: <b>{this.props.Salary}</b></label>\n      </p>\n      <Departments dId={this.props.DeptId} dName={this.props.DeptName}></Departments>\n    </div>\n  }\n}\n\nclass Departments extends React.Component {\n  render() {\n    return <div>\n      <p><label>Department Id: <b>{this.props.dId}</b></label></p>\n      <p><label>Department Name: <b>{this.props.dName}</b></label></p>\n    </div>\n  }\n}\nconst classEmployee = <Employees Id=\"100\" Name=\"Carol\" Location=\"Cork\" Salary=\"50000\" DeptId=\"200\" DeptName=\"BA\"></Employees>\nReactDOM.render(classEmployee, document.getElementById(\"classEmployee\"));*/\n//----------------\n\n//state management----------\n/*class State extends React.Component {\n  state={counter:0};\n  addEmployee=()=>{\n    this.setState({counter:this.state.counter+1});\n    }\n  render() {\n    return <div>\n      <p><button onClick={this.addEmployee}>Add New Employee</button></p>\n      <p><label>Add Employee Button is Clicked: <b>{this.state.counter}</b></label></p>\n    </div>\n  }\n}\n\nconst stateTutorial = <State></State>\nReactDOM.render(stateTutorial, document.getElementById(\"state\"));\n\n\nclass CountChar extends React.Component {\n  state={message:''};\n  \n  onMessageChange(text){\n    this.setState({message:\"Message has \" + text.length + \" number of characters\"});\n    }\n\n  render() {\n    return <div>\n      <p><lable>Input Characters: <input type=\"text\" onChange={e=>this.onMessageChange(e.target.value)}></input></lable></p>\n      <p><lable>{this.state.message}</lable></p>\n    </div>\n  }\n}\n\nconst countChar = <CountChar></CountChar>\nReactDOM.render(countChar, document.getElementById(\"countChar\"));*/\n//--------------------"]},"metadata":{},"sourceType":"module"}